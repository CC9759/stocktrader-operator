apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: stocktraders.operators.ibm.com
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.global.replicas
    description: Initial number of pods per microservice
    name: Replicas
    type: integer
  - JSONPath: .spec.global.autoscale
    description: Enable a Horizontal Pod Autoscaler for each microservice
    name: AutoScale
    type: boolean
  - JSONPath: .spec.global.monitoring
    description: Register a Prometheus scraper for the metrics endpoint for each microservice
    name: Monitoring
    type: boolean
  - JSONPath: .spec.global.ingress
    description: Enable an Ingress for each front-end microservice
    name: Ingress
    type: boolean
  - JSONPath: .spec.global.healthCheck
    description: Configure Kubernetes to periodically probe each microservice to determine its health
    name: HealthCheck
    type: boolean
  - JSONPath: .spec.global.jsonLogging
    description: Enable to send logs to ElasticSearch so they can be viewed in Kibana
    name: JSONLogging
    type: boolean
  - JSONPath: .metadata.creationTimestamp
    description: Age of the resource
    name: Age
    type: date
  group: operators.ibm.com
  names:
    kind: StockTrader
    listKind: StockTraderList
    plural: stocktraders
    singular: stocktrader
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      x-kubernetes-preserve-unknown-fields: true
      description: Schema for the IBM Stock Trader cloud-native sample application
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: StockTraderSpec defines the desired state of StockTrader
          type: object
          properties:
            global:
              description: Global Settings
              type: object
              properties:
                replicas:
                  description: Initial number of pods per microservice
                  format: int32
                  minimum: 1
                  type: integer
                autoscale:
                  description: Enable Auto-scaling
                  type: boolean
                monitoring:
                  description: Enable Prometheus monitoring
                  type: boolean
                ingress:
                  description: Enable Ingress
                  type: boolean
                healthCheck:
                  description: Enable Readiness and Liveness probes
                  type: boolean
                jsonLogging:
                  description: Output pod logs in JSON format (for ElasticSearch/Kibana)
                  type: boolean
            database:
              description: Database Settings.  Mandatory - required by the portfolio microservice
              type: object
              properties:
                kind:
                  description: Kind of database
                  enum:
                  - db2
                  - postgres
                  - cockroach
                  - derby
                  type: string
                host:
                  description: Host name (or IP address)
                  type: string
                port:
                  description: Port number
                  format: int32
                  type: integer
                id:
                  description: User ID
                  type: string
                password:
                  description: Password
                  format: password
                  type: string
                db:
                  description: Database name
                  type: string
            portfolio:
              description: Portfolio microservice
              type: object
              properties:
                image:
                  description: Docker image settings
                  type: object
                  properties:
                    repository:
                      description: Docker image registry
                      type: string
                    tag:
                      description: Docker image tag
                      type: string
                url:
                  description: Portfolio URL
                  type: string
            stockQuote:
              description: Stock Quote microservice
              type: object
              properties:
                image:
                  description: Docker image settings
                  type: object
                  properties:
                    repository:
                      description: Docker image registry
                      type: string
                    tag:
                      description: Docker image tag
                      type: string
                url:
                  description: Stock Quote URL
                  type: string
                apiConnect:
                  description: API Connect URL
                  type: string
                iexTrading:
                  description: IEX Trading URL
                  type: string
                iexApiKey:
                  description: IEX API Key
                  format: password
                  type: string
            trader:
              description: Trader simple UI microservice
              type: object
              properties:
                enabled:
                  description: Enable the basic UI microservice
                  type: boolean
                image:
                  description: Docker image settings
                  type: object
                  properties:
                    repository:
                      description: Docker image registry
                      type: string
                    tag:
                      description: Docker image tag
                      type: string
            tradr:
              description: Tradr fancy UI microservice (requires OIDC)
              type: object
              properties:
                enabled:
                  description: Enable the fancy UI microservice
                  type: boolean
                image:
                  description: Docker image settings
                  type: object
                  properties:
                    repository:
                      description: Docker image registry
                      type: string
                    tag:
                      description: Docker image tag
                      type: string
            messaging:
              description: Messaging microservice (optional - requires MQ)
              type: object
              properties:
                enabled:
                  description: Enable the messaging microservice
                  type: boolean
                image:
                  description: Docker image settings
                  type: object
                  properties:
                    repository:
                      description: Docker image registry
                      type: string
                    tag:
                      description: Docker image tag
                      type: string
                notification:
                  description: Notification service settings
                  type: object
                  properties:
                    url:
                      description: URL for the Notification microservice
                      type: string
            notification-slack:
              description: Slack-based notification microservice (optional - requires messaging microservice)
              type: object
              properties:
                enabled:
                  description: Enable the Slack-based notification microservice (choose this or the Twitter-based one, not both)
                  type: boolean
                image:
                  description: Docker image settings
                  type: object
                  properties:
                    repository:
                      description: Docker image registry
                      type: string
                    tag:
                      description: Docker image tag
                      type: string
            notification-twitter:
              description: Twitter-based notification microservice (optional - requires messaging microservice)
              type: object
              properties:
                enabled:
                  description: Enable the Twitter-based notification microservice (choose this or the Slack-based one, not both)
                  type: boolean
                image:
                  description: Docker image settings
                  type: object
                  properties:
                    repository:
                      description: Docker image registry
                      type: string
                    tag:
                      description: Docker image tag
                      type: string
            trade-history:
              description: Trade History microservice (optional - requires kafka and mongo)
              type: object
              properties:
                enabled:
                  description: Enable the Trade History microservice
                  type: boolean
                image:
                  description: Docker image settings
                  type: object
                  properties:
                    repository:
                      description: Docker image registry
                      type: string
                    tag:
                      description: Docker image tag
                      type: string
                url:
                  description: URL for the Trade History microservice
                  type: string
            looper:
              description: Looper microservice (optional - used for load/stress testing)
              type: object
              properties:
                enabled:
                  description: Enable the Looper microservice
                  type: boolean
                image:
                  description: Docker image settings
                  type: object
                  properties:
                    repository:
                      description: Docker image registry
                      type: string
                    tag:
                      description: Docker image tag
                      type: string
                url:
                  description: URL for the Looper microservice
                  type: string
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
